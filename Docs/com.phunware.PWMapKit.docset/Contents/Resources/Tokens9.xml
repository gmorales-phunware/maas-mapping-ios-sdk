<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/PWMapViewDelegate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/PWMapViewDelegate</TokenIdentifier>
			<Abstract type="html">The PWMapViewDelegate protocol defines a set of optional methods that you can use to receive map-related update messages. Because many map operations require the PWMapView class to load data asynchronously, the map view calls these methods to notify your application when specific operations complete. The map view also uses these methods to request annotations and to manage interactions with those views.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
            
			
			<NodeRef refid="9"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PWMapViewDelegate/mapViewDidLoad:</TokenIdentifier>
			<Abstract type="html">Tells the delegate that the specified map view successfully loaded the needed map data.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)mapViewDidLoad:(PWMapView *)mapView</Declaration>
			<Parameters>
				<Parameter>
					<Name>mapView</Name>
					<Abstract type="html">The map view that started the load operation.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/mapViewDidLoad:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PWMapViewDelegate/mapView:failedToLoadWithError:</TokenIdentifier>
			<Abstract type="html">Tells the delegate that the specified view was unable to load the map data.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)mapView:(PWMapView *)mapView failedToLoadWithError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>mapView</Name>
					<Abstract type="html">The map view that started the load operation.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">The reason that the map data could not be loaded</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/mapView:failedToLoadWithError:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PWMapViewDelegate/mapView:didSelectAnnotationView:</TokenIdentifier>
			<Abstract type="html">Tells the delegate that one of its annotation views was selected.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)mapView:(PWMapView *)mapView didSelectAnnotationView:(PWAnnotationView *)view</Declaration>
			<Parameters>
				<Parameter>
					<Name>mapView</Name>
					<Abstract type="html">The map view containing the annotation view.</Abstract>
				</Parameter><Parameter>
					<Name>view</Name>
					<Abstract type="html">The annotation view that was selected.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/mapView:didSelectAnnotationView:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PWMapViewDelegate/mapView:viewForAnnotation:</TokenIdentifier>
			<Abstract type="html">Returns the view associated with the specified annotation object.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (PWAnnotationView *)mapView:(PWMapView *)mapView viewForAnnotation:(id&lt;PWAnnotation&gt;)annotation</Declaration>
			<Parameters>
				<Parameter>
					<Name>mapView</Name>
					<Abstract type="html">The map view that requested the annotation view.</Abstract>
				</Parameter><Parameter>
					<Name>annotation</Name>
					<Abstract type="html">The object representing the annotation that is about to be displayed.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The annotation view to display for the specified annotation or nil if you want to display a standard annotation view.</Abstract></ReturnValue>
			<Anchor>//api/name/mapView:viewForAnnotation:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PWMapViewDelegate/mapView:didUpdateToLocation:floorID:</TokenIdentifier>
			<Abstract type="html">Tells the delegate that a new location value is available.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)mapView:(PWMapView *)mapView didUpdateToLocation:(CGPoint)location floorID:(NSUInteger)floorID</Declaration>
			<Parameters>
				<Parameter>
					<Name>mapView</Name>
					<Abstract type="html">The map view that had the location update.</Abstract>
				</Parameter><Parameter>
					<Name>location</Name>
					<Abstract type="html">The new location data.</Abstract>
				</Parameter><Parameter>
					<Name>floorID</Name>
					<Abstract type="html">The floor ID for the new location.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/mapView:didUpdateToLocation:floorID:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PWMapViewDelegate/mapView:didFailToUpdateLocationWithError:</TokenIdentifier>
			<Abstract type="html">Tells the delegate that the map view was unable to retrieve a location value.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)mapView:(PWMapView *)mapView didFailToUpdateLocationWithError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>mapView</Name>
					<Abstract type="html">The map view that had the location update.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">The error object containing the reason the location could not be retrieved</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/mapView:didFailToUpdateLocationWithError:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PWMapViewDelegate/mapView:didReceiveSingleTap:</TokenIdentifier>
			<Abstract type="html">Tells the delegate when the map view receives a single-tap.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)mapView:(PWMapView *)mapView didReceiveSingleTap:(UIGestureRecognizer *)gestureRecognizer</Declaration>
			<Parameters>
				<Parameter>
					<Name>mapView</Name>
					<Abstract type="html">The mapView that received the single-tap.</Abstract>
				</Parameter><Parameter>
					<Name>gestureRecognizer</Name>
					<Abstract type="html">The single-tap gesture recognizer that recognized the tap.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/mapView:didReceiveSingleTap:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PWMapViewDelegate/mapViewDidZoom:</TokenIdentifier>
			<Abstract type="html">Tells the delegate that the map viewâ€™s zoom factor changed.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)mapViewDidZoom:(PWMapView *)mapView</Declaration>
			<Parameters>
				<Parameter>
					<Name>mapView</Name>
					<Abstract type="html">The PWMapView object whose zoom factor changed.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/mapViewDidZoom:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PWMapViewDelegate/mapViewDidScroll:</TokenIdentifier>
			<Abstract type="html">Tells the delegate when the user scrolls the content view within the receiver</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)mapViewDidScroll:(PWMapView *)mapView</Declaration>
			<Parameters>
				<Parameter>
					<Name>mapView</Name>
					<Abstract type="html">The PWMapView object in which the scrolling occurred</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/mapViewDidScroll:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PWMapViewDelegate/mapViewWillBeginDragging:</TokenIdentifier>
			<Abstract type="html">Tells the delegate when the map view is about to start scrolling the content.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)mapViewWillBeginDragging:(PWMapView *)mapView</Declaration>
			<Parameters>
				<Parameter>
					<Name>mapView</Name>
					<Abstract type="html">The PWMapView object that is about to scroll the content view.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/mapViewWillBeginDragging:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PWMapViewDelegate/mapViewWillEndDragging:withVelocity:targetContentOffset:</TokenIdentifier>
			<Abstract type="html">Tells the delegate when the user finishes scrolling the content.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)mapViewWillEndDragging:(PWMapView *)mapView withVelocity:(CGPoint)velocity targetContentOffset:(inout CGPoint *)targetContentOffset</Declaration>
			<Parameters>
				<Parameter>
					<Name>mapView</Name>
					<Abstract type="html">The PWMapView object where the user ended the touch.</Abstract>
				</Parameter><Parameter>
					<Name>velocity</Name>
					<Abstract type="html">The velocity of the scroll view (in points) at the moment the touch was released.</Abstract>
				</Parameter><Parameter>
					<Name>targetContentOffset</Name>
					<Abstract type="html">The expected offset when the scrolling action decelerates to a stop.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/mapViewWillEndDragging:withVelocity:targetContentOffset:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PWMapViewDelegate/mapViewDidEndDragging:willDecelerate:</TokenIdentifier>
			<Abstract type="html">Tells the delegate when dragging ended in the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)mapViewDidEndDragging:(PWMapView *)mapView willDecelerate:(BOOL)decelerate</Declaration>
			<Parameters>
				<Parameter>
					<Name>mapView</Name>
					<Abstract type="html">The PWMapView object that finished scrolling the content view</Abstract>
				</Parameter><Parameter>
					<Name>decelerate</Name>
					<Abstract type="html">YES if the scrolling movement will continue, but decelerate, after a touch-up gesture during a dragging operation. If the value is NO, scrolling stops immediately upon touch-up.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/mapViewDidEndDragging:willDecelerate:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PWMapViewDelegate/mapViewWillBeginDecelerating:</TokenIdentifier>
			<Abstract type="html">Tells the delegate that the scroll view is starting to decelerate the scrolling movement.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)mapViewWillBeginDecelerating:(PWMapView *)mapView</Declaration>
			<Parameters>
				<Parameter>
					<Name>mapView</Name>
					<Abstract type="html">The PWMapView object that is decelerating the scrolling of the content view.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/mapViewWillBeginDecelerating:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PWMapViewDelegate/mapViewDidEndDecelerating:</TokenIdentifier>
			<Abstract type="html">Tells the delegate that the map view has ended decelerating the scrolling movement</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)mapViewDidEndDecelerating:(PWMapView *)mapView</Declaration>
			<Parameters>
				<Parameter>
					<Name>mapView</Name>
					<Abstract type="html">The PWMapView object that is decelerating the scrolling of the content view.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/mapViewDidEndDecelerating:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PWMapViewDelegate/mapViewDidEndScrollingAnimation:</TokenIdentifier>
			<Abstract type="html">Tells the delegate when a scrolling animation in the map view concludes.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)mapViewDidEndScrollingAnimation:(PWMapView *)mapView</Declaration>
			<Parameters>
				<Parameter>
					<Name>mapView</Name>
					<Abstract type="html">The PWMapView object that is performing the scrolling animation</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/mapViewDidEndScrollingAnimation:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
        
	</File>
</Tokens>